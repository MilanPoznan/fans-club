{"version":3,"file":"hello_near.js","sources":["../node_modules/near-sdk-js/lib/utils.js","../node_modules/near-sdk-js/lib/types/vm_types.js","../node_modules/@scure/base/lib/esm/index.js","../node_modules/near-sdk-js/lib/types/public_key.js","../node_modules/near-sdk-js/lib/api.js","../node_modules/near-sdk-js/lib/near-bindgen.js","../node_modules/near-sdk-js/lib/collections/lookup-map.js","../node_modules/near-sdk-js/lib/collections/vector.js","../node_modules/near-sdk-js/lib/collections/unordered-map.js","../node_modules/near-sdk-js/lib/promise.js","../src/models.ts","../src/utils/userUtils.ts","../src/contract.ts"],"sourcesContent":["// make PromiseIndex a nominal typing\nvar PromiseIndexBrand;\n(function (PromiseIndexBrand) {\n    PromiseIndexBrand[PromiseIndexBrand[\"_\"] = -1] = \"_\";\n})(PromiseIndexBrand || (PromiseIndexBrand = {}));\nconst TYPE_KEY = \"typeInfo\";\nvar TypeBrand;\n(function (TypeBrand) {\n    TypeBrand[\"BIGINT\"] = \"bigint\";\n    TypeBrand[\"DATE\"] = \"date\";\n})(TypeBrand || (TypeBrand = {}));\nexport const ERR_INCONSISTENT_STATE = \"The collection is an inconsistent state. Did previous smart contract execution terminate unexpectedly?\";\nexport const ERR_INDEX_OUT_OF_BOUNDS = \"Index out of bounds\";\nconst ACCOUNT_ID_REGEX = /^(([a-z\\d]+[-_])*[a-z\\d]+\\.)*([a-z\\d]+[-_])*[a-z\\d]+$/;\nexport function u8ArrayToBytes(array) {\n    return array.reduce((result, value) => `${result}${String.fromCharCode(value)}`, \"\");\n}\n// TODO this function is a bit broken and the type can't be string\n// TODO for more info: https://github.com/near/near-sdk-js/issues/78\nexport function bytesToU8Array(bytes) {\n    return Uint8Array.from([...bytes].map((byte) => byte.charCodeAt(0)));\n}\n/**\n * Accepts a string or Uint8Array and either checks for the validity of the string or converts the Uint8Array to Bytes.\n *\n * @param stringOrU8Array - The string or Uint8Array to be checked/transformed\n * @returns Safe Bytes to be used in NEAR calls.\n */\nexport function bytes(stringOrU8Array) {\n    if (typeof stringOrU8Array === \"string\") {\n        return checkStringIsBytes(stringOrU8Array);\n    }\n    if (stringOrU8Array instanceof Uint8Array) {\n        return u8ArrayToBytes(stringOrU8Array);\n    }\n    throw new Error(\"bytes: expected string or Uint8Array\");\n}\nfunction checkStringIsBytes(value) {\n    [...value].forEach((character, index) => {\n        assert(character.charCodeAt(0) <= 255, `string ${value} at index ${index}: ${character} is not a valid byte`);\n    });\n    return value;\n}\n/**\n * Asserts that the expression passed to the function is truthy, otherwise throws a new Error with the provided message.\n *\n * @param expression - The expression to be asserted.\n * @param message - The error message to be printed.\n */\nexport function assert(expression, message) {\n    if (!expression) {\n        throw new Error(\"assertion failed: \" + message);\n    }\n}\nexport function getValueWithOptions(value, options = {\n    deserializer: deserialize,\n}) {\n    const deserialized = deserialize(value);\n    if (deserialized === undefined || deserialized === null) {\n        return options?.defaultValue ?? null;\n    }\n    if (options?.reconstructor) {\n        return options.reconstructor(deserialized);\n    }\n    return deserialized;\n}\nexport function serializeValueWithOptions(value, { serializer } = {\n    serializer: serialize,\n}) {\n    return serializer(value);\n}\nexport function serialize(valueToSerialize) {\n    return JSON.stringify(valueToSerialize, function (key, value) {\n        if (typeof value === \"bigint\") {\n            return {\n                value: value.toString(),\n                [TYPE_KEY]: TypeBrand.BIGINT,\n            };\n        }\n        if (typeof this[key] === \"object\" &&\n            this[key] !== null &&\n            this[key] instanceof Date) {\n            return {\n                value: this[key].toISOString(),\n                [TYPE_KEY]: TypeBrand.DATE,\n            };\n        }\n        return value;\n    });\n}\nexport function deserialize(valueToDeserialize) {\n    return JSON.parse(valueToDeserialize, (_, value) => {\n        if (value !== null &&\n            typeof value === \"object\" &&\n            Object.keys(value).length === 2 &&\n            Object.keys(value).every((key) => [\"value\", TYPE_KEY].includes(key))) {\n            switch (value[TYPE_KEY]) {\n                case TypeBrand.BIGINT:\n                    return BigInt(value[\"value\"]);\n                case TypeBrand.DATE:\n                    return new Date(value[\"value\"]);\n            }\n        }\n        return value;\n    });\n}\n/**\n * Validates the Account ID according to the NEAR protocol\n * [Account ID rules](https://nomicon.io/DataStructures/Account#account-id-rules).\n *\n * @param accountId - The Account ID string you want to validate.\n */\nexport function validateAccountId(accountId) {\n    return (accountId.length >= 2 &&\n        accountId.length <= 64 &&\n        ACCOUNT_ID_REGEX.test(accountId));\n}\n","/**\n * A Promise result in near can be one of:\n * - NotReady = 0 - the promise you are specifying is still not ready, not yet failed nor successful.\n * - Successful = 1 - the promise has been successfully executed and you can retrieve the resulting value.\n * - Failed = 2 - the promise execution has failed.\n */\nexport var PromiseResult;\n(function (PromiseResult) {\n    PromiseResult[PromiseResult[\"NotReady\"] = 0] = \"NotReady\";\n    PromiseResult[PromiseResult[\"Successful\"] = 1] = \"Successful\";\n    PromiseResult[PromiseResult[\"Failed\"] = 2] = \"Failed\";\n})(PromiseResult || (PromiseResult = {}));\n/**\n * A promise error can either be due to the promise failing or not yet being ready.\n */\nexport var PromiseError;\n(function (PromiseError) {\n    PromiseError[PromiseError[\"Failed\"] = 0] = \"Failed\";\n    PromiseError[PromiseError[\"NotReady\"] = 1] = \"NotReady\";\n})(PromiseError || (PromiseError = {}));\n","/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nexport function assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nfunction chain(...args) {\n    const wrap = (a, b) => (c) => a(b(c));\n    const encode = Array.from(args)\n        .reverse()\n        .reduce((acc, i) => (acc ? wrap(acc, i.encode) : i.encode), undefined);\n    const decode = args.reduce((acc, i) => (acc ? wrap(acc, i.decode) : i.decode), undefined);\n    return { encode, decode };\n}\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\nfunction convertRadix(data, from, to) {\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            digits[i] = Math.floor(digitBase / to);\n            if (!Number.isSafeInteger(digits[i]) || digits[i] * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!digits[i])\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = (from, to) => from + (to - gcd(from, to));\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0;\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1;\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of strings');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of strings');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\nexport const utils = { alphabet, chain, checksum, radix, radix2, join, padding };\nexport const base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexport const base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexport const base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexport const base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexport const base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexport const base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexport const base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexport const base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexport const base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexport const base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nexport const base58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), base58);\nconst BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        prefix = prefix.toLowerCase();\n        return `${prefix}1${BECH_ALPHABET.encode(words)}${bechChecksum(prefix, words, ENCODING_CONST)}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        str = lowered;\n        const sepIndex = str.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = str.slice(0, sepIndex);\n        const _words = str.slice(sepIndex + 1);\n        if (_words.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(_words).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!_words.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    return { encode, decode, decodeToBytes, decodeUnsafe, fromWords, fromWordsUnsafe, toWords };\n}\nexport const bech32 = genBech32('bech32');\nexport const bech32m = genBech32('bech32m');\nexport const utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexport const hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\nconst CODERS = {\n    utf8, hex, base16, base32, base64, base64url, base58, base58xmr\n};\nconst coderTypeError = `Invalid encoding type. Available types: ${Object.keys(CODERS).join(', ')}`;\nexport const bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!(bytes instanceof Uint8Array))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexport const str = bytesToString;\nexport const stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexport const bytes = stringToBytes;\n","import { bytes } from \"../utils\";\nimport { base58 } from \"@scure/base\";\nexport var CurveType;\n(function (CurveType) {\n    CurveType[CurveType[\"ED25519\"] = 0] = \"ED25519\";\n    CurveType[CurveType[\"SECP256K1\"] = 1] = \"SECP256K1\";\n})(CurveType || (CurveType = {}));\nvar DataLength;\n(function (DataLength) {\n    DataLength[DataLength[\"ED25519\"] = 32] = \"ED25519\";\n    DataLength[DataLength[\"SECP256K1\"] = 64] = \"SECP256K1\";\n})(DataLength || (DataLength = {}));\nfunction getCurveType(curveType) {\n    switch (curveType) {\n        case CurveType.ED25519:\n        case CurveType.SECP256K1:\n            return curveType;\n        default:\n            throw new UnknownCurve();\n    }\n}\nfunction dataLength(curveType) {\n    switch (curveType) {\n        case CurveType.ED25519:\n        case CurveType.SECP256K1:\n            return {\n                [CurveType.ED25519]: DataLength.ED25519,\n                [CurveType.SECP256K1]: DataLength.SECP256K1,\n            }[curveType];\n        default:\n            throw new UnknownCurve();\n    }\n}\nfunction splitKeyTypeData(value) {\n    const idx = value.indexOf(\":\");\n    if (idx >= 0) {\n        return [\n            curveTypeFromStr(value.substring(0, idx)),\n            value.substring(idx + 1),\n        ];\n    }\n    else {\n        return [CurveType.ED25519, value];\n    }\n}\nexport function curveTypeFromStr(value) {\n    switch (value) {\n        case \"ed25519\":\n            return CurveType.ED25519;\n        case \"secp256k1\":\n            return CurveType.SECP256K1;\n        default:\n            throw new UnknownCurve();\n    }\n}\nexport class ParsePublicKeyError extends Error {\n}\nexport class InvalidLengthError extends ParsePublicKeyError {\n    constructor(length, expectedLength) {\n        super(`Invalid length: ${length}. Expected: ${expectedLength}`);\n        this.length = length;\n        this.expectedLength = expectedLength;\n    }\n}\nexport class Base58Error extends ParsePublicKeyError {\n    constructor(error) {\n        super(`Base58 error: ${error}`);\n        this.error = error;\n    }\n}\nexport class UnknownCurve extends ParsePublicKeyError {\n    constructor() {\n        super(\"Unknown curve\");\n    }\n}\n/**\n * A abstraction on top of the NEAR public key string.\n */\nexport class PublicKey {\n    /**\n     * @param data - The string you want to create a PublicKey from.\n     */\n    constructor(data) {\n        const curveLenght = dataLength(data.charCodeAt(0));\n        if (data.length !== curveLenght + 1) {\n            throw new InvalidLengthError(data.length, curveLenght + 1);\n        }\n        this.type = getCurveType(data.charCodeAt(0));\n        this.data = data;\n    }\n    /**\n     * The curve type of the public key.\n     */\n    curveType() {\n        return this.type;\n    }\n    /**\n     * Create a public key from a public key string.\n     *\n     * @param publicKeyString - The public key string you want to create a PublicKey from.\n     */\n    static fromString(publicKeyString) {\n        const [curve, keyData] = splitKeyTypeData(publicKeyString);\n        let data;\n        try {\n            data = bytes(base58.decode(keyData));\n        }\n        catch (error) {\n            throw new Base58Error(error.message);\n        }\n        return new PublicKey(`${String.fromCharCode(curve)}${data}`);\n    }\n}\n","import { assert } from \"./utils\";\nimport { PromiseResult } from \"./types\";\nconst U64_MAX = 2n ** 64n - 1n;\nconst EVICTED_REGISTER = U64_MAX - 1n;\n/**\n * Logs parameters in the NEAR WASM virtual machine.\n *\n * @param params - Parameters to log.\n */\nexport function log(...params) {\n    env.log(params.reduce((accumulated, parameter, index) => {\n        // Stringify undefined\n        const param = parameter === undefined ? \"undefined\" : parameter;\n        // Convert Objects to strings and convert to string\n        const stringified = typeof param === \"object\" ? JSON.stringify(param) : `${param}`;\n        if (index === 0) {\n            return stringified;\n        }\n        return `${accumulated} ${stringified}`;\n    }, \"\"));\n}\n/**\n * Returns the account ID of the account that signed the transaction.\n * Can only be called in a call or initialize function.\n */\nexport function signerAccountId() {\n    env.signer_account_id(0);\n    return env.read_register(0);\n}\n/**\n * Returns the public key of the account that signed the transaction.\n * Can only be called in a call or initialize function.\n */\nexport function signerAccountPk() {\n    env.signer_account_pk(0);\n    return env.read_register(0);\n}\n/**\n * Returns the account ID of the account that called the function.\n * Can only be called in a call or initialize function.\n */\nexport function predecessorAccountId() {\n    env.predecessor_account_id(0);\n    return env.read_register(0);\n}\n/**\n * Returns the account ID of the current contract - the contract that is being executed.\n */\nexport function currentAccountId() {\n    env.current_account_id(0);\n    return env.read_register(0);\n}\n/**\n * Returns the current block index.\n */\nexport function blockIndex() {\n    return env.block_index();\n}\n/**\n * Returns the current block height.\n */\nexport function blockHeight() {\n    return blockIndex();\n}\n/**\n * Returns the current block timestamp.\n */\nexport function blockTimestamp() {\n    return env.block_timestamp();\n}\n/**\n * Returns the current epoch height.\n */\nexport function epochHeight() {\n    return env.epoch_height();\n}\n/**\n * Returns the amount of NEAR attached to this function call.\n * Can only be called in payable functions.\n */\nexport function attachedDeposit() {\n    return env.attached_deposit();\n}\n/**\n * Returns the amount of Gas that was attached to this function call.\n */\nexport function prepaidGas() {\n    return env.prepaid_gas();\n}\n/**\n * Returns the amount of Gas that has been used by this function call until now.\n */\nexport function usedGas() {\n    return env.used_gas();\n}\n/**\n * Returns the current account's account balance.\n */\nexport function accountBalance() {\n    return env.account_balance();\n}\n/**\n * Returns the current account's locked balance.\n */\nexport function accountLockedBalance() {\n    return env.account_locked_balance();\n}\n/**\n * Reads the value from NEAR storage that is stored under the provided key.\n *\n * @param key - The key to read from storage.\n */\nexport function storageRead(key) {\n    const returnValue = env.storage_read(key, 0);\n    if (returnValue !== 1n) {\n        return null;\n    }\n    return env.read_register(0);\n}\n/**\n * Checks for the existance of a value under the provided key in NEAR storage.\n *\n * @param key - The key to check for in storage.\n */\nexport function storageHasKey(key) {\n    return env.storage_has_key(key) === 1n;\n}\n/**\n * Get the last written or removed value from NEAR storage.\n */\nexport function storageGetEvicted() {\n    return env.read_register(EVICTED_REGISTER);\n}\n/**\n * Returns the current accounts NEAR storage usage.\n */\nexport function storageUsage() {\n    return env.storage_usage();\n}\n/**\n * Writes the provided bytes to NEAR storage under the provided key.\n *\n * @param key - The key under which to store the value.\n * @param value - The value to store.\n */\nexport function storageWrite(key, value) {\n    return env.storage_write(key, value, EVICTED_REGISTER) === 1n;\n}\n/**\n * Removes the value of the provided key from NEAR storage.\n *\n * @param key - The key to be removed.\n */\nexport function storageRemove(key) {\n    return env.storage_remove(key, EVICTED_REGISTER) === 1n;\n}\n/**\n * Returns the cost of storing 0 Byte on NEAR storage.\n */\nexport function storageByteCost() {\n    return 10000000000000000000n;\n}\n/**\n * Returns the arguments passed to the current smart contract call.\n */\nexport function input() {\n    env.input(0);\n    return env.read_register(0);\n}\n/**\n * Returns the value from the NEAR WASM virtual machine.\n *\n * @param value - The value to return.\n */\nexport function valueReturn(value) {\n    env.value_return(value);\n}\n/**\n * Returns a random string of bytes.\n */\nexport function randomSeed() {\n    env.random_seed(0);\n    return env.read_register(0);\n}\n/**\n * Create a NEAR promise call to a contract on the blockchain.\n *\n * @param accountId - The account ID of the target contract.\n * @param methodName - The name of the method to be called.\n * @param args - The arguments to call the method with.\n * @param amount - The amount of NEAR attached to the call.\n * @param gas - The amount of Gas attached to the call.\n */\nexport function promiseCreate(accountId, methodName, args, amount, gas) {\n    return env.promise_create(accountId, methodName, args, amount, gas);\n}\n/**\n * Attach a callback NEAR promise to be executed after a provided promise.\n *\n * @param promiseIndex - The promise after which to call the callback.\n * @param accountId - The account ID of the contract to perform the callback on.\n * @param methodName - The name of the method to call.\n * @param args - The arguments to call the method with.\n * @param amount - The amount of NEAR to attach to the call.\n * @param gas - The amount of Gas to attach to the call.\n */\nexport function promiseThen(promiseIndex, accountId, methodName, args, amount, gas) {\n    return env.promise_then(promiseIndex, accountId, methodName, args, amount, gas);\n}\n/**\n * Join an arbitrary array of NEAR promises.\n *\n * @param promiseIndexes - An arbitrary array of NEAR promise indexes to join.\n */\nexport function promiseAnd(...promiseIndexes) {\n    return env.promise_and(...promiseIndexes);\n}\n/**\n * Create a NEAR promise which will have multiple promise actions inside.\n *\n * @param accountId - The account ID of the target contract.\n */\nexport function promiseBatchCreate(accountId) {\n    return env.promise_batch_create(accountId);\n}\n/**\n * Attach a callback NEAR promise to a batch of NEAR promise actions.\n *\n * @param promiseIndex - The NEAR promise index of the batch.\n * @param accountId - The account ID of the target contract.\n */\nexport function promiseBatchThen(promiseIndex, accountId) {\n    return env.promise_batch_then(promiseIndex, accountId);\n}\n/**\n * Attach a create account promise action to the NEAR promise index with the provided promise index.\n *\n * @param promiseIndex - The index of the promise to attach a create account action to.\n */\nexport function promiseBatchActionCreateAccount(promiseIndex) {\n    env.promise_batch_action_create_account(promiseIndex);\n}\n/**\n * Attach a deploy contract promise action to the NEAR promise index with the provided promise index.\n *\n * @param promiseIndex - The index of the promise to attach a deploy contract action to.\n * @param code - The WASM byte code of the contract to be deployed.\n */\nexport function promiseBatchActionDeployContract(promiseIndex, code) {\n    env.promise_batch_action_deploy_contract(promiseIndex, code);\n}\n/**\n * Attach a function call promise action to the NEAR promise index with the provided promise index.\n *\n * @param promiseIndex - The index of the promise to attach a function call action to.\n * @param methodName - The name of the method to be called.\n * @param args - The arguments to call the method with.\n * @param amount - The amount of NEAR to attach to the call.\n * @param gas - The amount of Gas to attach to the call.\n */\nexport function promiseBatchActionFunctionCall(promiseIndex, methodName, args, amount, gas) {\n    env.promise_batch_action_function_call(promiseIndex, methodName, args, amount, gas);\n}\n/**\n * Attach a transfer promise action to the NEAR promise index with the provided promise index.\n *\n * @param promiseIndex - The index of the promise to attach a transfer action to.\n * @param amount - The amount of NEAR to transfer.\n */\nexport function promiseBatchActionTransfer(promiseIndex, amount) {\n    env.promise_batch_action_transfer(promiseIndex, amount);\n}\n/**\n * Attach a stake promise action to the NEAR promise index with the provided promise index.\n *\n * @param promiseIndex - The index of the promise to attach a stake action to.\n * @param amount - The amount of NEAR to stake.\n * @param publicKey - The public key with which to stake.\n */\nexport function promiseBatchActionStake(promiseIndex, amount, publicKey) {\n    env.promise_batch_action_stake(promiseIndex, amount, publicKey);\n}\n/**\n * Attach a add full access key promise action to the NEAR promise index with the provided promise index.\n *\n * @param promiseIndex - The index of the promise to attach a add full access key action to.\n * @param publicKey - The public key to add as a full access key.\n * @param nonce - The nonce to use.\n */\nexport function promiseBatchActionAddKeyWithFullAccess(promiseIndex, publicKey, nonce) {\n    env.promise_batch_action_add_key_with_full_access(promiseIndex, publicKey, nonce);\n}\n/**\n * Attach a add access key promise action to the NEAR promise index with the provided promise index.\n *\n * @param promiseIndex - The index of the promise to attach a add access key action to.\n * @param publicKey - The public key to add.\n * @param nonce - The nonce to use.\n * @param allowance - The allowance of the access key.\n * @param receiverId - The account ID of the receiver.\n * @param methodNames - The names of the method to allow the key for.\n */\nexport function promiseBatchActionAddKeyWithFunctionCall(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames) {\n    env.promise_batch_action_add_key_with_function_call(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames);\n}\n/**\n * Attach a delete key promise action to the NEAR promise index with the provided promise index.\n *\n * @param promiseIndex - The index of the promise to attach a delete key action to.\n * @param publicKey - The public key to delete.\n */\nexport function promiseBatchActionDeleteKey(promiseIndex, publicKey) {\n    env.promise_batch_action_delete_key(promiseIndex, publicKey);\n}\n/**\n * Attach a delete account promise action to the NEAR promise index with the provided promise index.\n *\n * @param promiseIndex - The index of the promise to attach a delete account action to.\n * @param beneficiaryId - The account ID of the beneficiary - the account that receives the remaining amount of NEAR.\n */\nexport function promiseBatchActionDeleteAccount(promiseIndex, beneficiaryId) {\n    env.promise_batch_action_delete_account(promiseIndex, beneficiaryId);\n}\n/**\n * Attach a function call with weight promise action to the NEAR promise index with the provided promise index.\n *\n * @param promiseIndex - The index of the promise to attach a function call with weight action to.\n * @param methodName - The name of the method to be called.\n * @param args - The arguments to call the method with.\n * @param amount - The amount of NEAR to attach to the call.\n * @param gas - The amount of Gas to attach to the call.\n * @param weight - The weight of unused Gas to use.\n */\nexport function promiseBatchActionFunctionCallWeight(promiseIndex, methodName, args, amount, gas, weight) {\n    env.promise_batch_action_function_call_weight(promiseIndex, methodName, args, amount, gas, weight);\n}\n/**\n * The number of promise results available.\n */\nexport function promiseResultsCount() {\n    return env.promise_results_count();\n}\n/**\n * Returns the result of the NEAR promise for the passed promise index.\n *\n * @param promiseIndex - The index of the promise to return the result for.\n */\nexport function promiseResult(promiseIndex) {\n    const status = env.promise_result(promiseIndex, 0);\n    assert(Number(status) === PromiseResult.Successful, `Promise result ${status == PromiseResult.Failed\n        ? \"Failed\"\n        : status == PromiseResult.NotReady\n            ? \"NotReady\"\n            : status}`);\n    return env.read_register(0);\n}\n/**\n * Executes the promise in the NEAR WASM virtual machine.\n *\n * @param promiseIndex - The index of the promise to execute.\n */\nexport function promiseReturn(promiseIndex) {\n    env.promise_return(promiseIndex);\n}\nexport function sha256(value) {\n    env.sha256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak256(value) {\n    env.keccak256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak512(value) {\n    env.keccak512(value, 0);\n    return env.read_register(0);\n}\nexport function ripemd160(value) {\n    env.ripemd160(value, 0);\n    return env.read_register(0);\n}\nexport function ecrecover(hash, sig, v, malleabilityFlag) {\n    const returnValue = env.ecrecover(hash, sig, v, malleabilityFlag, 0);\n    if (returnValue === 0n) {\n        return null;\n    }\n    return env.read_register(0);\n}\n// NOTE: \"env.panic(msg)\" is not exported, use \"throw Error(msg)\" instead\nexport function panicUtf8(msg) {\n    env.panic_utf8(msg);\n}\nexport function logUtf8(msg) {\n    env.log_utf8(msg);\n}\nexport function logUtf16(msg) {\n    env.log_utf16(msg);\n}\nexport function validatorStake(accountId) {\n    return env.validator_stake(accountId);\n}\nexport function validatorTotalStake() {\n    return env.validator_total_stake();\n}\nexport function altBn128G1Multiexp(value) {\n    env.alt_bn128_g1_multiexp(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128G1Sum(value) {\n    env.alt_bn128_g1_sum(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128PairingCheck(value) {\n    return env.alt_bn128_pairing_check(value) === 1n;\n}\n","import * as near from \"./api\";\nimport { deserialize, serialize } from \"./utils\";\n/**\n * Tells the SDK to use this function as the initialization function of the contract.\n *\n * @param _empty - An empty object.\n */\nexport function initialize(_empty) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return function (_target, _key, _descriptor\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    ) { };\n}\n/**\n * Tells the SDK to expose this function as a view function.\n *\n * @param _empty - An empty object.\n */\nexport function view(_empty) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return function (_target, _key, _descriptor\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    ) { };\n}\nexport function call({ privateFunction = false, payableFunction = false, }) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return function (_target, _key, descriptor) {\n        const originalMethod = descriptor.value;\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        descriptor.value = function (...args) {\n            if (privateFunction &&\n                near.predecessorAccountId() !== near.currentAccountId()) {\n                throw new Error(\"Function is private\");\n            }\n            if (!payableFunction && near.attachedDeposit() > 0n) {\n                throw new Error(\"Function is not payable\");\n            }\n            return originalMethod.apply(this, args);\n        };\n    };\n}\n/**\n * Tells the SDK to apply an array of passed in middleware to the function execution.\n *\n * @param middlewares - The middlewares to be executed.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function middleware(...middlewares) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return function (_target, _key, descriptor) {\n        const originalMethod = descriptor.value;\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        descriptor.value = function (...args) {\n            try {\n                middlewares.forEach((middleware) => middleware(...args));\n            }\n            catch (error) {\n                throw new Error(error);\n            }\n            return originalMethod.apply(this, args);\n        };\n    };\n}\nexport function NearBindgen({ requireInit = false, serializer = serialize, deserializer = deserialize, }) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (target) => {\n        return class extends target {\n            static _create() {\n                return new target();\n            }\n            static _getState() {\n                const rawState = near.storageRead(\"STATE\");\n                return rawState ? this._deserialize(rawState) : null;\n            }\n            static _saveToStorage(objectToSave) {\n                near.storageWrite(\"STATE\", this._serialize(objectToSave));\n            }\n            static _getArgs() {\n                return JSON.parse(near.input() || \"{}\");\n            }\n            static _serialize(value, forReturn = false) {\n                if (forReturn) {\n                    return JSON.stringify(value, (_, value) => typeof value === \"bigint\" ? `${value}` : value);\n                }\n                return serializer(value);\n            }\n            static _deserialize(value) {\n                return deserializer(value);\n            }\n            static _reconstruct(classObject, plainObject) {\n                for (const item in classObject) {\n                    const reconstructor = classObject[item].constructor?.reconstruct;\n                    classObject[item] = reconstructor\n                        ? reconstructor(plainObject[item])\n                        : plainObject[item];\n                }\n                return classObject;\n            }\n            static _requireInit() {\n                return requireInit;\n            }\n        };\n    };\n}\n","import * as near from \"../api\";\nimport { getValueWithOptions, serializeValueWithOptions, } from \"../utils\";\n/**\n * A lookup map that stores data in NEAR storage.\n */\nexport class LookupMap {\n    /**\n     * @param keyPrefix - The byte prefix to use when storing elements inside this collection.\n     */\n    constructor(keyPrefix) {\n        this.keyPrefix = keyPrefix;\n    }\n    /**\n     * Checks whether the collection contains the value.\n     *\n     * @param key - The value for which to check the presence.\n     */\n    containsKey(key) {\n        const storageKey = this.keyPrefix + key;\n        return near.storageHasKey(storageKey);\n    }\n    /**\n     * Get the data stored at the provided key.\n     *\n     * @param key - The key at which to look for the data.\n     * @param options - Options for retrieving the data.\n     */\n    get(key, options) {\n        const storageKey = this.keyPrefix + key;\n        const value = near.storageRead(storageKey);\n        return getValueWithOptions(value, options);\n    }\n    /**\n     * Removes and retrieves the element with the provided key.\n     *\n     * @param key - The key at which to remove data.\n     * @param options - Options for retrieving the data.\n     */\n    remove(key, options) {\n        const storageKey = this.keyPrefix + key;\n        if (!near.storageRemove(storageKey)) {\n            return options?.defaultValue ?? null;\n        }\n        const value = near.storageGetEvicted();\n        return getValueWithOptions(value, options);\n    }\n    /**\n     * Store a new value at the provided key.\n     *\n     * @param key - The key at which to store in the collection.\n     * @param newValue - The value to store in the collection.\n     * @param options - Options for retrieving and storing the data.\n     */\n    set(key, newValue, options) {\n        const storageKey = this.keyPrefix + key;\n        const storageValue = serializeValueWithOptions(newValue, options);\n        if (!near.storageWrite(storageKey, storageValue)) {\n            return options?.defaultValue ?? null;\n        }\n        const value = near.storageGetEvicted();\n        return getValueWithOptions(value, options);\n    }\n    /**\n     * Extends the current collection with the passed in array of key-value pairs.\n     *\n     * @param keyValuePairs - The key-value pairs to extend the collection with.\n     * @param options - Options for storing the data.\n     */\n    extend(keyValuePairs, options) {\n        for (const [key, value] of keyValuePairs) {\n            this.set(key, value, options);\n        }\n    }\n    /**\n     * Serialize the collection.\n     *\n     * @param options - Options for storing the data.\n     */\n    serialize(options) {\n        return serializeValueWithOptions(this, options);\n    }\n    /**\n     * Converts the deserialized data from storage to a JavaScript instance of the collection.\n     *\n     * @param data - The deserialized data to create an instance from.\n     */\n    static reconstruct(data) {\n        return new LookupMap(data.keyPrefix);\n    }\n}\n","import * as near from \"../api\";\nimport { assert, getValueWithOptions, u8ArrayToBytes, serializeValueWithOptions, ERR_INCONSISTENT_STATE, ERR_INDEX_OUT_OF_BOUNDS, } from \"../utils\";\nfunction indexToKey(prefix, index) {\n    const data = new Uint32Array([index]);\n    const array = new Uint8Array(data.buffer);\n    const key = u8ArrayToBytes(array);\n    return prefix + key;\n}\n/**\n * An iterable implementation of vector that stores its content on the trie.\n * Uses the following map: index -> element\n */\nexport class Vector {\n    /**\n     * @param prefix - The byte prefix to use when storing elements inside this collection.\n     * @param length - The initial length of the collection. By default 0.\n     */\n    constructor(prefix, length = 0) {\n        this.prefix = prefix;\n        this.length = length;\n    }\n    /**\n     * Checks whether the collection is empty.\n     */\n    isEmpty() {\n        return this.length === 0;\n    }\n    /**\n     * Get the data stored at the provided index.\n     *\n     * @param index - The index at which to look for the data.\n     * @param options - Options for retrieving the data.\n     */\n    get(index, options) {\n        if (index >= this.length) {\n            return options?.defaultValue ?? null;\n        }\n        const storageKey = indexToKey(this.prefix, index);\n        const value = near.storageRead(storageKey);\n        return getValueWithOptions(value, options);\n    }\n    /**\n     * Removes an element from the vector and returns it in serialized form.\n     * The removed element is replaced by the last element of the vector.\n     * Does not preserve ordering, but is `O(1)`.\n     *\n     * @param index - The index at which to remove the element.\n     * @param options - Options for retrieving and storing the data.\n     */\n    swapRemove(index, options) {\n        assert(index < this.length, ERR_INDEX_OUT_OF_BOUNDS);\n        if (index + 1 === this.length) {\n            return this.pop(options);\n        }\n        const key = indexToKey(this.prefix, index);\n        const last = this.pop(options);\n        assert(near.storageWrite(key, serializeValueWithOptions(last, options)), ERR_INCONSISTENT_STATE);\n        const value = near.storageGetEvicted();\n        return getValueWithOptions(value, options);\n    }\n    /**\n     * Adds data to the collection.\n     *\n     * @param element - The data to store.\n     * @param options - Options for storing the data.\n     */\n    push(element, options) {\n        const key = indexToKey(this.prefix, this.length);\n        this.length += 1;\n        near.storageWrite(key, serializeValueWithOptions(element, options));\n    }\n    /**\n     * Removes and retrieves the element with the highest index.\n     *\n     * @param options - Options for retrieving the data.\n     */\n    pop(options) {\n        if (this.isEmpty()) {\n            return options?.defaultValue ?? null;\n        }\n        const lastIndex = this.length - 1;\n        const lastKey = indexToKey(this.prefix, lastIndex);\n        this.length -= 1;\n        assert(near.storageRemove(lastKey), ERR_INCONSISTENT_STATE);\n        const value = near.storageGetEvicted();\n        return getValueWithOptions(value, options);\n    }\n    /**\n     * Replaces the data stored at the provided index with the provided data and returns the previously stored data.\n     *\n     * @param index - The index at which to replace the data.\n     * @param element - The data to replace with.\n     * @param options - Options for retrieving and storing the data.\n     */\n    replace(index, element, options) {\n        assert(index < this.length, ERR_INDEX_OUT_OF_BOUNDS);\n        const key = indexToKey(this.prefix, index);\n        assert(near.storageWrite(key, serializeValueWithOptions(element, options)), ERR_INCONSISTENT_STATE);\n        const value = near.storageGetEvicted();\n        return getValueWithOptions(value, options);\n    }\n    /**\n     * Extends the current collection with the passed in array of elements.\n     *\n     * @param elements - The elements to extend the collection with.\n     */\n    extend(elements) {\n        for (const element of elements) {\n            this.push(element);\n        }\n    }\n    [Symbol.iterator]() {\n        return new VectorIterator(this);\n    }\n    /**\n     * Create a iterator on top of the default collection iterator using custom options.\n     *\n     * @param options - Options for retrieving and storing the data.\n     */\n    createIteratorWithOptions(options) {\n        return {\n            [Symbol.iterator]: () => new VectorIterator(this, options),\n        };\n    }\n    /**\n     * Return a JavaScript array of the data stored within the collection.\n     *\n     * @param options - Options for retrieving and storing the data.\n     */\n    toArray(options) {\n        const array = [];\n        const iterator = options ? this.createIteratorWithOptions(options) : this;\n        for (const value of iterator) {\n            array.push(value);\n        }\n        return array;\n    }\n    /**\n     * Remove all of the elements stored within the collection.\n     */\n    clear() {\n        for (let index = 0; index < this.length; index++) {\n            const key = indexToKey(this.prefix, index);\n            near.storageRemove(key);\n        }\n        this.length = 0;\n    }\n    /**\n     * Serialize the collection.\n     *\n     * @param options - Options for storing the data.\n     */\n    serialize(options) {\n        return serializeValueWithOptions(this, options);\n    }\n    /**\n     * Converts the deserialized data from storage to a JavaScript instance of the collection.\n     *\n     * @param data - The deserialized data to create an instance from.\n     */\n    static reconstruct(data) {\n        const vector = new Vector(data.prefix, data.length);\n        return vector;\n    }\n}\n/**\n * An iterator for the Vector collection.\n */\nexport class VectorIterator {\n    /**\n     * @param vector - The vector collection to create an iterator for.\n     * @param options - Options for retrieving and storing data.\n     */\n    constructor(vector, options) {\n        this.vector = vector;\n        this.options = options;\n        this.current = 0;\n    }\n    next() {\n        if (this.current >= this.vector.length) {\n            return { value: null, done: true };\n        }\n        const value = this.vector.get(this.current, this.options);\n        this.current += 1;\n        return { value, done: false };\n    }\n}\n","import { assert, ERR_INCONSISTENT_STATE, getValueWithOptions, serializeValueWithOptions, } from \"../utils\";\nimport { Vector, VectorIterator } from \"./vector\";\nimport { LookupMap } from \"./lookup-map\";\n/**\n * An unordered map that stores data in NEAR storage.\n */\nexport class UnorderedMap {\n    /**\n     * @param prefix - The byte prefix to use when storing elements inside this collection.\n     */\n    constructor(prefix) {\n        this.prefix = prefix;\n        this.keys = new Vector(`${prefix}u`); // intentional different prefix with old UnorderedMap\n        this.values = new LookupMap(`${prefix}m`);\n    }\n    /**\n     * The number of elements stored in the collection.\n     */\n    get length() {\n        return this.keys.length;\n    }\n    /**\n     * Checks whether the collection is empty.\n     */\n    isEmpty() {\n        return this.keys.isEmpty();\n    }\n    /**\n     * Get the data stored at the provided key.\n     *\n     * @param key - The key at which to look for the data.\n     * @param options - Options for retrieving the data.\n     */\n    get(key, options) {\n        const valueAndIndex = this.values.get(key);\n        if (valueAndIndex === null) {\n            return options?.defaultValue ?? null;\n        }\n        const [value] = valueAndIndex;\n        return getValueWithOptions(value, options);\n    }\n    /**\n     * Store a new value at the provided key.\n     *\n     * @param key - The key at which to store in the collection.\n     * @param value - The value to store in the collection.\n     * @param options - Options for retrieving and storing the data.\n     */\n    set(key, value, options) {\n        const valueAndIndex = this.values.get(key);\n        const serialized = serializeValueWithOptions(value, options);\n        if (valueAndIndex === null) {\n            const newElementIndex = this.length;\n            this.keys.push(key);\n            this.values.set(key, [serialized, newElementIndex]);\n            return null;\n        }\n        const [oldValue, oldIndex] = valueAndIndex;\n        this.values.set(key, [serialized, oldIndex]);\n        return getValueWithOptions(oldValue, options);\n    }\n    /**\n     * Removes and retrieves the element with the provided key.\n     *\n     * @param key - The key at which to remove data.\n     * @param options - Options for retrieving the data.\n     */\n    remove(key, options) {\n        const oldValueAndIndex = this.values.remove(key);\n        if (oldValueAndIndex === null) {\n            return options?.defaultValue ?? null;\n        }\n        const [value, index] = oldValueAndIndex;\n        assert(this.keys.swapRemove(index) !== null, ERR_INCONSISTENT_STATE);\n        // the last key is swapped to key[index], the corresponding [value, index] need update\n        if (!this.keys.isEmpty() && index !== this.keys.length) {\n            // if there is still elements and it was not the last element\n            const swappedKey = this.keys.get(index);\n            const swappedValueAndIndex = this.values.get(swappedKey);\n            assert(swappedValueAndIndex !== null, ERR_INCONSISTENT_STATE);\n            this.values.set(swappedKey, [swappedValueAndIndex[0], index]);\n        }\n        return getValueWithOptions(value, options);\n    }\n    /**\n     * Remove all of the elements stored within the collection.\n     */\n    clear() {\n        for (const key of this.keys) {\n            // Set instead of remove to avoid loading the value from storage.\n            this.values.set(key, null);\n        }\n        this.keys.clear();\n    }\n    [Symbol.iterator]() {\n        return new UnorderedMapIterator(this);\n    }\n    /**\n     * Create a iterator on top of the default collection iterator using custom options.\n     *\n     * @param options - Options for retrieving and storing the data.\n     */\n    createIteratorWithOptions(options) {\n        return {\n            [Symbol.iterator]: () => new UnorderedMapIterator(this, options),\n        };\n    }\n    /**\n     * Return a JavaScript array of the data stored within the collection.\n     *\n     * @param options - Options for retrieving and storing the data.\n     */\n    toArray(options) {\n        const array = [];\n        const iterator = options ? this.createIteratorWithOptions(options) : this;\n        for (const value of iterator) {\n            array.push(value);\n        }\n        return array;\n    }\n    /**\n     * Extends the current collection with the passed in array of key-value pairs.\n     *\n     * @param keyValuePairs - The key-value pairs to extend the collection with.\n     */\n    extend(keyValuePairs) {\n        for (const [key, value] of keyValuePairs) {\n            this.set(key, value);\n        }\n    }\n    /**\n     * Serialize the collection.\n     *\n     * @param options - Options for storing the data.\n     */\n    serialize(options) {\n        return serializeValueWithOptions(this, options);\n    }\n    /**\n     * Converts the deserialized data from storage to a JavaScript instance of the collection.\n     *\n     * @param data - The deserialized data to create an instance from.\n     */\n    static reconstruct(data) {\n        const map = new UnorderedMap(data.prefix);\n        // reconstruct keys Vector\n        map.keys = new Vector(`${data.prefix}u`);\n        map.keys.length = data.keys.length;\n        // reconstruct values LookupMap\n        map.values = new LookupMap(`${data.prefix}m`);\n        return map;\n    }\n}\n/**\n * An iterator for the UnorderedMap collection.\n */\nclass UnorderedMapIterator {\n    /**\n     * @param unorderedMap - The unordered map collection to create an iterator for.\n     * @param options - Options for retrieving and storing data.\n     */\n    constructor(unorderedMap, options) {\n        this.options = options;\n        this.keys = new VectorIterator(unorderedMap.keys);\n        this.map = unorderedMap.values;\n    }\n    next() {\n        const key = this.keys.next();\n        if (key.done) {\n            return { value: [key.value, null], done: key.done };\n        }\n        const valueAndIndex = this.map.get(key.value);\n        assert(valueAndIndex !== null, ERR_INCONSISTENT_STATE);\n        return {\n            done: key.done,\n            value: [key.value, getValueWithOptions(valueAndIndex[0], this.options)],\n        };\n    }\n}\n","import { assert } from \"./utils\";\nimport * as near from \"./api\";\n/**\n * A promise action which can be executed on the NEAR blockchain.\n */\nexport class PromiseAction {\n}\n/**\n * A create account promise action.\n *\n * @extends {PromiseAction}\n */\nexport class CreateAccount extends PromiseAction {\n    add(promiseIndex) {\n        near.promiseBatchActionCreateAccount(promiseIndex);\n    }\n}\n/**\n * A deploy contract promise action.\n *\n * @extends {PromiseAction}\n */\nexport class DeployContract extends PromiseAction {\n    /**\n     * @param code - The code of the contract to be deployed.\n     */\n    constructor(code) {\n        super();\n        this.code = code;\n    }\n    add(promiseIndex) {\n        near.promiseBatchActionDeployContract(promiseIndex, this.code);\n    }\n}\n/**\n * A function call promise action.\n *\n * @extends {PromiseAction}\n */\nexport class FunctionCall extends PromiseAction {\n    /**\n     * @param functionName - The name of the function to be called.\n     * @param args - The arguments to be passed to the function.\n     * @param amount - The amount of NEAR to attach to the call.\n     * @param gas - The amount of Gas to attach to the call.\n     */\n    constructor(functionName, args, amount, gas) {\n        super();\n        this.functionName = functionName;\n        this.args = args;\n        this.amount = amount;\n        this.gas = gas;\n    }\n    add(promiseIndex) {\n        near.promiseBatchActionFunctionCall(promiseIndex, this.functionName, this.args, this.amount, this.gas);\n    }\n}\n/**\n * A function call weight promise action.\n *\n * @extends {PromiseAction}\n */\nexport class FunctionCallWeight extends PromiseAction {\n    /**\n     * @param functionName - The name of the function to be called.\n     * @param args - The arguments to be passed to the function.\n     * @param amount - The amount of NEAR to attach to the call.\n     * @param gas - The amount of Gas to attach to the call.\n     * @param weight - The weight of unused Gas to use.\n     */\n    constructor(functionName, args, amount, gas, weight) {\n        super();\n        this.functionName = functionName;\n        this.args = args;\n        this.amount = amount;\n        this.gas = gas;\n        this.weight = weight;\n    }\n    add(promiseIndex) {\n        near.promiseBatchActionFunctionCallWeight(promiseIndex, this.functionName, this.args, this.amount, this.gas, this.weight);\n    }\n}\n/**\n * A transfer promise action.\n *\n * @extends {PromiseAction}\n */\nexport class Transfer extends PromiseAction {\n    /**\n     * @param amount - The amount of NEAR to tranfer.\n     */\n    constructor(amount) {\n        super();\n        this.amount = amount;\n    }\n    add(promiseIndex) {\n        near.promiseBatchActionTransfer(promiseIndex, this.amount);\n    }\n}\n/**\n * A stake promise action.\n *\n * @extends {PromiseAction}\n */\nexport class Stake extends PromiseAction {\n    /**\n     * @param amount - The amount of NEAR to tranfer.\n     * @param publicKey - The public key to use for staking.\n     */\n    constructor(amount, publicKey) {\n        super();\n        this.amount = amount;\n        this.publicKey = publicKey;\n    }\n    add(promiseIndex) {\n        near.promiseBatchActionStake(promiseIndex, this.amount, this.publicKey.data);\n    }\n}\n/**\n * A add full access key promise action.\n *\n * @extends {PromiseAction}\n */\nexport class AddFullAccessKey extends PromiseAction {\n    /**\n     * @param publicKey - The public key to add as a full access key.\n     * @param nonce - The nonce to use.\n     */\n    constructor(publicKey, nonce) {\n        super();\n        this.publicKey = publicKey;\n        this.nonce = nonce;\n    }\n    add(promiseIndex) {\n        near.promiseBatchActionAddKeyWithFullAccess(promiseIndex, this.publicKey.data, this.nonce);\n    }\n}\n/**\n * A add access key promise action.\n *\n * @extends {PromiseAction}\n */\nexport class AddAccessKey extends PromiseAction {\n    /**\n     * @param publicKey - The public key to add as a access key.\n     * @param allowance - The allowance for the key in yoctoNEAR.\n     * @param receiverId - The account ID of the reciever.\n     * @param functionNames - The names of funcitons to authorize.\n     * @param nonce - The nonce to use.\n     */\n    constructor(publicKey, allowance, receiverId, functionNames, nonce) {\n        super();\n        this.publicKey = publicKey;\n        this.allowance = allowance;\n        this.receiverId = receiverId;\n        this.functionNames = functionNames;\n        this.nonce = nonce;\n    }\n    add(promiseIndex) {\n        near.promiseBatchActionAddKeyWithFunctionCall(promiseIndex, this.publicKey.data, this.nonce, this.allowance, this.receiverId, this.functionNames);\n    }\n}\n/**\n * A delete key promise action.\n *\n * @extends {PromiseAction}\n */\nexport class DeleteKey extends PromiseAction {\n    /**\n     * @param publicKey - The public key to delete from the account.\n     */\n    constructor(publicKey) {\n        super();\n        this.publicKey = publicKey;\n    }\n    add(promiseIndex) {\n        near.promiseBatchActionDeleteKey(promiseIndex, this.publicKey.data);\n    }\n}\n/**\n * A delete account promise action.\n *\n * @extends {PromiseAction}\n */\nexport class DeleteAccount extends PromiseAction {\n    /**\n     * @param beneficiaryId - The beneficiary of the account deletion - the account to recieve all of the remaining funds of the deleted account.\n     */\n    constructor(beneficiaryId) {\n        super();\n        this.beneficiaryId = beneficiaryId;\n    }\n    add(promiseIndex) {\n        near.promiseBatchActionDeleteAccount(promiseIndex, this.beneficiaryId);\n    }\n}\nclass PromiseSingle {\n    constructor(accountId, actions, after, promiseIndex) {\n        this.accountId = accountId;\n        this.actions = actions;\n        this.after = after;\n        this.promiseIndex = promiseIndex;\n    }\n    constructRecursively() {\n        if (this.promiseIndex !== null) {\n            return this.promiseIndex;\n        }\n        const promiseIndex = this.after\n            ? near.promiseBatchThen(this.after.constructRecursively(), this.accountId)\n            : near.promiseBatchCreate(this.accountId);\n        this.actions.forEach((action) => action.add(promiseIndex));\n        this.promiseIndex = promiseIndex;\n        return promiseIndex;\n    }\n}\nexport class PromiseJoint {\n    constructor(promiseA, promiseB, promiseIndex) {\n        this.promiseA = promiseA;\n        this.promiseB = promiseB;\n        this.promiseIndex = promiseIndex;\n    }\n    constructRecursively() {\n        if (this.promiseIndex !== null) {\n            return this.promiseIndex;\n        }\n        const result = near.promiseAnd(this.promiseA.constructRecursively(), this.promiseB.constructRecursively());\n        this.promiseIndex = result;\n        return result;\n    }\n}\n/**\n * A high level class to construct and work with NEAR promises.\n */\nexport class NearPromise {\n    /**\n     * @param subtype - The subtype of the promise.\n     * @param shouldReturn - Whether the promise should return.\n     */\n    constructor(subtype, shouldReturn) {\n        this.subtype = subtype;\n        this.shouldReturn = shouldReturn;\n    }\n    /**\n     * Creates a new promise to the provided account ID.\n     *\n     * @param accountId - The account ID on which to call the promise.\n     */\n    static new(accountId) {\n        const subtype = new PromiseSingle(accountId, [], null, null);\n        return new NearPromise(subtype, false);\n    }\n    addAction(action) {\n        if (this.subtype instanceof PromiseJoint) {\n            throw new Error(\"Cannot add action to a joint promise.\");\n        }\n        this.subtype.actions.push(action);\n        return this;\n    }\n    /**\n     * Creates a create account promise action and adds it to the current promise.\n     */\n    createAccount() {\n        return this.addAction(new CreateAccount());\n    }\n    /**\n     * Creates a deploy contract promise action and adds it to the current promise.\n     *\n     * @param code - The code of the contract to be deployed.\n     */\n    deployContract(code) {\n        return this.addAction(new DeployContract(code));\n    }\n    /**\n     * Creates a function call promise action and adds it to the current promise.\n     *\n     * @param functionName - The name of the function to be called.\n     * @param args - The arguments to be passed to the function.\n     * @param amount - The amount of NEAR to attach to the call.\n     * @param gas - The amount of Gas to attach to the call.\n     */\n    functionCall(functionName, args, amount, gas) {\n        return this.addAction(new FunctionCall(functionName, args, amount, gas));\n    }\n    /**\n     * Creates a function call weight promise action and adds it to the current promise.\n     *\n     * @param functionName - The name of the function to be called.\n     * @param args - The arguments to be passed to the function.\n     * @param amount - The amount of NEAR to attach to the call.\n     * @param gas - The amount of Gas to attach to the call.\n     * @param weight - The weight of unused Gas to use.\n     */\n    functionCallWeight(functionName, args, amount, gas, weight) {\n        return this.addAction(new FunctionCallWeight(functionName, args, amount, gas, weight));\n    }\n    /**\n     * Creates a transfer promise action and adds it to the current promise.\n     *\n     * @param amount - The amount of NEAR to tranfer.\n     */\n    transfer(amount) {\n        return this.addAction(new Transfer(amount));\n    }\n    /**\n     * Creates a stake promise action and adds it to the current promise.\n     *\n     * @param amount - The amount of NEAR to tranfer.\n     * @param publicKey - The public key to use for staking.\n     */\n    stake(amount, publicKey) {\n        return this.addAction(new Stake(amount, publicKey));\n    }\n    /**\n     * Creates a add full access key promise action and adds it to the current promise.\n     * Uses 0n as the nonce.\n     *\n     * @param publicKey - The public key to add as a full access key.\n     */\n    addFullAccessKey(publicKey) {\n        return this.addFullAccessKeyWithNonce(publicKey, 0n);\n    }\n    /**\n     * Creates a add full access key promise action and adds it to the current promise.\n     * Allows you to specify the nonce.\n     *\n     * @param publicKey - The public key to add as a full access key.\n     * @param nonce - The nonce to use.\n     */\n    addFullAccessKeyWithNonce(publicKey, nonce) {\n        return this.addAction(new AddFullAccessKey(publicKey, nonce));\n    }\n    /**\n     * Creates a add access key promise action and adds it to the current promise.\n     * Uses 0n as the nonce.\n     *\n     * @param publicKey - The public key to add as a access key.\n     * @param allowance - The allowance for the key in yoctoNEAR.\n     * @param receiverId - The account ID of the reciever.\n     * @param functionNames - The names of funcitons to authorize.\n     */\n    addAccessKey(publicKey, allowance, receiverId, functionNames) {\n        return this.addAccessKeyWithNonce(publicKey, allowance, receiverId, functionNames, 0n);\n    }\n    /**\n     * Creates a add access key promise action and adds it to the current promise.\n     * Allows you to specify the nonce.\n     *\n     * @param publicKey - The public key to add as a access key.\n     * @param allowance - The allowance for the key in yoctoNEAR.\n     * @param receiverId - The account ID of the reciever.\n     * @param functionNames - The names of funcitons to authorize.\n     * @param nonce - The nonce to use.\n     */\n    addAccessKeyWithNonce(publicKey, allowance, receiverId, functionNames, nonce) {\n        return this.addAction(new AddAccessKey(publicKey, allowance, receiverId, functionNames, nonce));\n    }\n    /**\n     * Creates a delete key promise action and adds it to the current promise.\n     *\n     * @param publicKey - The public key to delete from the account.\n     */\n    deleteKey(publicKey) {\n        return this.addAction(new DeleteKey(publicKey));\n    }\n    /**\n     * Creates a delete account promise action and adds it to the current promise.\n     *\n     * @param beneficiaryId - The beneficiary of the account deletion - the account to recieve all of the remaining funds of the deleted account.\n     */\n    deleteAccount(beneficiaryId) {\n        return this.addAction(new DeleteAccount(beneficiaryId));\n    }\n    /**\n     * Joins the provided promise with the current promise, making the current promise a joint promise subtype.\n     *\n     * @param other - The promise to join with the current promise.\n     */\n    and(other) {\n        const subtype = new PromiseJoint(this, other, null);\n        return new NearPromise(subtype, false);\n    }\n    /**\n     * Adds a callback to the current promise.\n     *\n     * @param other - The promise to be executed as the promise.\n     */\n    then(other) {\n        assert(other.subtype instanceof PromiseSingle, \"Cannot callback joint promise.\");\n        assert(other.subtype.after === null, \"Cannot callback promise which is already scheduled after another\");\n        other.subtype.after = this;\n        return other;\n    }\n    /**\n     * Sets the shouldReturn field to true.\n     */\n    asReturn() {\n        this.shouldReturn = true;\n        return this;\n    }\n    /**\n     * Recursively goes through the current promise to get the promise index.\n     */\n    constructRecursively() {\n        const result = this.subtype.constructRecursively();\n        if (this.shouldReturn) {\n            near.promiseReturn(result);\n        }\n        return result;\n    }\n    /**\n     * Called by NearBindgen, when return object is a NearPromise instance.\n     */\n    onReturn() {\n        this.asReturn().constructRecursively();\n    }\n}\n","// 'use strict';\ntype SubscriptionType = 1 | 3 | 5 | 10 | 25 | 50 | 100 | 250 | 500\n\nexport const STORAGE_COST: bigint = BigInt(\"1000000000000000000000\")\n\nexport type UserStatus = 'bronze' | 'silver' | 'gold' | 'diamon'\n\nexport interface UserSubscription {\n  account_to_subscribe: string //Artist account \n  subscription_type: string // Chose between artist options 1,3,5,10,50... \n  is_onetime_donation: boolean //\n  timestamp: string\n}\n\nexport interface UserInterface {\n  account_id: string\n  total_dontaions: string //Donations value\n  total_dontaions_usdt: bigint //Donations value\n  total_transactions: number //count number of donations\n  subscription_lists: UserSubscription[] | []\n  user_status: UserStatus //Default is bronze \n  nickname: string\n}\n\n\nexport interface ArtistDynamicProps {\n  title: string;\n  about: string | null;\n  categories: string[];\n  socials: string[] | null;\n  subscription_types: SubscriptionType[];\n  onetime_donations: boolean;\n  image_url: null | string;\n}\n\ninterface ArtistDynamicPropsWithID extends ArtistDynamicProps {\n  account_id: string\n}\n\nexport interface SingleAritstType {\n  [key: string]: ArtistModel\n}\n\nexport class ArtistModel {\n  account_id: string; //wallet id\n  title: string;\n  about: string | null;\n  categories: string[];\n  socials: string[] | null;\n  subscription_types: SubscriptionType[];\n  onetime_donations: boolean;\n  image_url: null | string;\n  total_donations_near: string;\n  total_donations_usd: bigint;\n  total_donations_count: number;\n\n  constructor({ account_id, title, about, categories, socials, subscription_types, onetime_donations, image_url }: ArtistDynamicPropsWithID) {\n    this.account_id = account_id\n    this.title = title\n    this.about = about\n    this.categories = categories\n    this.socials = socials\n    this.subscription_types = subscription_types\n    this.onetime_donations = onetime_donations\n    this.image_url = image_url\n    this.total_donations_near = '0'\n    this.total_donations_usd = BigInt(0)\n    this.total_donations_count = 0\n  }\n\n\n}","import { UserInterface, UserSubscription, ArtistDynamicProps, UserStatus } from \"../models\";\n\nexport function updateUserAfterDonation(currentUser: UserInterface, donationTransaction: UserSubscription, dontaionUsdt: bigint, toTransfer: bigint) {\n  currentUser.total_transactions += 1;\n  currentUser.total_dontaions += toTransfer;\n  (currentUser.subscription_lists as UserSubscription[]).push(donationTransaction);\n  currentUser.total_dontaions_usdt += dontaionUsdt\n}\n\nexport function initUser(account_id: string, status: UserStatus, nickname: string): UserInterface {\n  return {\n    account_id: account_id,\n    total_dontaions: '0',\n    total_dontaions_usdt: BigInt(0),\n    total_transactions: 0,\n    subscription_lists: [],\n    user_status: status,\n    nickname: nickname\n\n  }\n}","import { NearBindgen, near, call, view, LookupMap, UnorderedMap, NearPromise } from 'near-sdk-js';\nimport {\n  ArtistDynamicProps,\n  UserInterface,\n  UserStatus,\n  STORAGE_COST,\n  SingleAritstType,\n  ArtistModel\n} from './models';\nimport { createDonationTransaction } from './utils/utils';\nimport { initUser, updateUserAfterDonation } from './utils/userUtils'\nimport { updateArtistAfterDonation } from './utils/artistUtils'\n\nimport BigNumber from 'bignumber.js'\n\n//Moram logiku za storage cost da odradim kada se registruju User & Artst\n@NearBindgen({})\nclass Artist { //\n  // allArtists: SingleAritstType = {} //lookup map\n  // users: UserInterface[] = [] //vec\n  contractDonations: bigint = BigInt(0)\n  accountForProfit: string = 'maddev.testnet'\n  all_artists = new UnorderedMap<ArtistModel>('map-art')\n  all_users = new LookupMap<UserInterface>('map-usr')\n\n  @view({})\n  get_artist({ account_id }: { account_id: string }) {\n    return this.all_artists.get(account_id)\n  }\n\n  @view({})\n  get_all_artist() {\n    return this.all_artists.toArray()\n  }\n\n  @view({})\n  get_artist_from_category({ category }: { category: string }) {\n\n    const artistFromCategory = []\n\n    this.all_artists.toArray().forEach((item: [string, ArtistModel]) => {\n      if (item[1].categories.includes(category)) {\n        artistFromCategory.push(item)\n      }\n    })\n\n    return artistFromCategory\n  }\n\n  @view({})\n  get_all_users() {\n    return this.all_users\n\n  }\n\n  @view({})\n  get_user({ account_id }) {\n    return this.all_users.get(account_id)\n  }\n\n  @call({})\n  create_user_profile({ status, nickname }: { status: UserStatus, nickname: string }): UserInterface | \"User already exist\" {\n\n    let userAccountId = near.predecessorAccountId()\n\n    // const checkDoesUserExist = this.users.filter(item => item.account_id === userAccountId)\n    const checkDoesUserExist = this.all_users.get(userAccountId)\n\n    if (!checkDoesUserExist) {\n      let newUser = initUser(userAccountId, status, nickname)\n      this.all_users.set(userAccountId, newUser)\n      // this.users.push(newUser)\n      return newUser\n    } else {\n      near.log('User already exist')\n      return \"User already exist\"\n    }\n  }\n\n  @call({})\n  create_artist({ title, about, categories, socials, subscription_types, onetime_donations, image_url }: ArtistDynamicProps): void {\n\n    let account_id = near.predecessorAccountId()\n\n    const isArtistExist = this.all_artists.get(account_id)\n    near.log('does aritst exist: ', isArtistExist)\n\n    if (!isArtistExist) {\n\n      const newArtist = new ArtistModel({\n        account_id,\n        title: title,\n        about: about,\n        categories: categories,\n        socials: socials,\n        subscription_types: subscription_types,\n        onetime_donations: onetime_donations,\n        image_url: image_url\n      })\n\n\n      this.all_artists.set(account_id, newArtist)\n\n    } else {\n      near.log('This account already exist ')\n    }\n\n  }\n  @call({ payableFunction: true })\n  donate_to_artist({ artist_id }: { artist_id: string }) {\n\n    //User \n    const donor = near.predecessorAccountId();\n    // near.log('donor', donor)\n    near.log('artist_id', artist_id)\n\n    // const currentUser = this.all_users.get(donor) as UserInterface\n\n    // near.log('currentUser', currentUser)\n    const donationAmount: bigint = near.attachedDeposit() as bigint;\n\n    let toTransfer = donationAmount - STORAGE_COST;\n    let myMoney = toTransfer / BigInt(20)\n    toTransfer = toTransfer - myMoney\n\n\n    near.log(\"Final test :) \")\n    near.log('My money', myMoney.toString())\n    near.log('toTransfer', toTransfer.toString())\n    //Attach deposit\n    return NearPromise.new(artist_id)\n      .transfer(toTransfer)\n      .then(\n        NearPromise.new('testdev13.testnet')\n          .transfer(myMoney)\n      )\n      .asReturn()\n\n    //Artist\n    // const artistToDonate = this.all_artists.get(artist_id) as ArtistModel;\n\n\n\n\n\n\n\n    /**\n     * This works\n     */\n    // const promise = near.promiseBatchCreate(artist_id)\n    // near.promiseBatchActionTransfer(promise, toTransfer)\n\n    // const donationTransaction = createDonationTransaction(artist_id, donationAmount, true, '20-11-2022')\n\n    // if (donor) {\n    //   updateUserAfterDonation(currentUser, donationTransaction, donationAmount, donationAmount)\n    // } else {\n    //   return `Please create account for ${donor} account`\n    // }\n\n    // updateArtistAfterDonation(artistToDonate, donationAmount, donationAmount)\n\n    // return currentUser\n  }\n\n}"],"names":["PromiseIndexBrand","TYPE_KEY","TypeBrand","ERR_INCONSISTENT_STATE","ERR_INDEX_OUT_OF_BOUNDS","u8ArrayToBytes","array","reduce","result","value","String","fromCharCode","assert","expression","message","Error","getValueWithOptions","options","deserializer","deserialize","deserialized","undefined","defaultValue","reconstructor","serializeValueWithOptions","serializer","serialize","valueToSerialize","JSON","stringify","key","toString","BIGINT","Date","toISOString","DATE","valueToDeserialize","parse","_","Object","keys","length","every","includes","BigInt","PromiseResult","PromiseError","assertNumber","n","Number","isSafeInteger","chain","args","wrap","a","b","c","encode","Array","from","reverse","acc","i","decode","alphabet","digits","isArray","map","input","letter","index","indexOf","join","separator","to","split","padding","bits","chr","data","push","end","slice","normalize","fn","convertRadix","pos","res","forEach","d","carry","done","digit","digitBase","Math","floor","gcd","radix2carry","convertRadix2","mask","radix","num","bytes","Uint8Array","radix2","revPadding","unsafeWrapper","apply","e","base16","base32","s","toUpperCase","replace","base64","base64url","genBase58","abc","base58","XMR_BLOCK_LEN","base58xmr","block","subarray","padStart","str","blockLen","j","concat","BECH_ALPHABET","POLYMOD_GENERATORS","bech32Polymod","pre","chk","bechChecksum","prefix","words","encodingConst","len","charCodeAt","v","genBech32","encoding","ENCODING_CONST","_words","fromWords","toWords","fromWordsUnsafe","limit","actualLength","TypeError","toLowerCase","lowered","sepIndex","lastIndexOf","sum","endsWith","decodeUnsafe","decodeToBytes","utf8","TextDecoder","TextEncoder","hex","CODERS","CurveType","DataLength","U64_MAX","EVICTED_REGISTER","log","params","env","accumulated","parameter","param","stringified","predecessorAccountId","predecessor_account_id","read_register","currentAccountId","current_account_id","attachedDeposit","attached_deposit","storageRead","returnValue","storage_read","storageHasKey","storage_has_key","storageGetEvicted","storageWrite","storage_write","storageRemove","storage_remove","promiseAnd","promiseIndexes","promise_and","promiseBatchCreate","accountId","promise_batch_create","promiseBatchThen","promiseIndex","promise_batch_then","promiseBatchActionCreateAccount","promise_batch_action_create_account","promiseBatchActionDeployContract","code","promise_batch_action_deploy_contract","promiseBatchActionFunctionCall","methodName","amount","gas","promise_batch_action_function_call","promiseBatchActionTransfer","promise_batch_action_transfer","promiseBatchActionStake","publicKey","promise_batch_action_stake","promiseBatchActionAddKeyWithFullAccess","nonce","promise_batch_action_add_key_with_full_access","promiseBatchActionAddKeyWithFunctionCall","allowance","receiverId","methodNames","promise_batch_action_add_key_with_function_call","promiseBatchActionDeleteKey","promise_batch_action_delete_key","promiseBatchActionDeleteAccount","beneficiaryId","promise_batch_action_delete_account","promiseBatchActionFunctionCallWeight","weight","promise_batch_action_function_call_weight","promiseReturn","promise_return","view","_empty","_target","_key","_descriptor","call","privateFunction","payableFunction","descriptor","originalMethod","near","NearBindgen","requireInit","target","_create","_getState","rawState","_deserialize","_saveToStorage","objectToSave","_serialize","_getArgs","forReturn","_reconstruct","classObject","plainObject","item","constructor","reconstruct","_requireInit","LookupMap","keyPrefix","containsKey","storageKey","get","remove","set","newValue","storageValue","extend","keyValuePairs","indexToKey","Uint32Array","buffer","Vector","isEmpty","swapRemove","pop","last","element","lastIndex","lastKey","elements","Symbol","iterator","VectorIterator","createIteratorWithOptions","toArray","clear","vector","current","next","UnorderedMap","values","valueAndIndex","serialized","newElementIndex","oldValue","oldIndex","oldValueAndIndex","swappedKey","swappedValueAndIndex","UnorderedMapIterator","unorderedMap","PromiseAction","CreateAccount","add","DeployContract","FunctionCall","functionName","FunctionCallWeight","Transfer","Stake","AddFullAccessKey","AddAccessKey","functionNames","DeleteKey","DeleteAccount","PromiseSingle","actions","after","constructRecursively","action","PromiseJoint","promiseA","promiseB","NearPromise","subtype","shouldReturn","new","addAction","createAccount","deployContract","functionCall","functionCallWeight","transfer","stake","addFullAccessKey","addFullAccessKeyWithNonce","addAccessKey","addAccessKeyWithNonce","deleteKey","deleteAccount","and","other","then","asReturn","onReturn","STORAGE_COST","ArtistModel","account_id","title","about","categories","socials","subscription_types","onetime_donations","image_url","total_donations_near","total_donations_usd","total_donations_count","initUser","status","nickname","total_dontaions","total_dontaions_usdt","total_transactions","subscription_lists","user_status","Artist","contractDonations","accountForProfit","all_artists","all_users","get_artist","get_all_artist","get_artist_from_category","category","artistFromCategory","get_all_users","get_user","create_user_profile","userAccountId","checkDoesUserExist","newUser","create_artist","isArtistExist","newArtist","donate_to_artist","artist_id","donationAmount","toTransfer","myMoney"],"mappings":"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"}